- name: Populate service facts
  ansible.builtin.service_facts: null
- name: Set before 6/7.40.0 flag
  ansible.builtin.set_fact:
    datadog_before_7400: '{{ datadog_major is defined and datadog_minor is defined
      and datadog_major | int < 8 and datadog_minor | int < 40 }}'
- name: Set before 6/7.24.1 flag
  ansible.builtin.set_fact:
    datadog_before_7241: '{{ datadog_major is defined and datadog_minor is defined
      and datadog_bugfix is defined and datadog_major | int < 8 and (datadog_minor
      | int < 24 or (datadog_minor | int == 24 and datadog_bugfix | int < 1)) }}'
- name: Set before 6/7.18.0 flag
  ansible.builtin.set_fact:
    datadog_before_7180: '{{ datadog_major is defined and datadog_minor is defined
      and datadog_major | int < 8 and datadog_minor | int < 18 }}'
- name: Add "{{ datadog_user }}" user to additional groups
  when: datadog_additional_groups | default([], true) | length > 0
  notify: restart datadog-agent
  ansible.builtin.user: name="{{ datadog_user }}" groups="{{ datadog_additional_groups
    }}" append=yes
- name: Include configuration setup tasks
  vars:
    _dd_config_dir: /etc/datadog-agent
    _dd_user: '{{ datadog_user }}'
    _dd_group: '{{ datadog_group }}'
    _dd_notify_agent: restart datadog-agent
  ansible.builtin.include_tasks: _agent-linux-macos-shared.yml
- name: Create system-probe configuration file
  when: datadog_manage_config
  notify: '{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart
    datadog-agent{% endif %}'
  ansible.builtin.template:
    src: system-probe.yaml.j2
    dest: /etc/datadog-agent/system-probe.yaml
    mode: 416
    owner: root
    group: '{{ datadog_group }}'
- name: Set system probe installed
  when: not datadog_skip_running_check
  ansible.builtin.set_fact:
    datadog_sysprobe_installed: '{{ ansible_facts.services[''datadog-agent-sysprobe'']
      is defined or ansible_facts.services[''datadog-agent-sysprobe.service''] is
      defined }}'
- name: Set system probe enabled (before 6/7.24.1)
  when: not datadog_skip_running_check and datadog_before_7241
  ansible.builtin.set_fact:
    datadog_sysprobe_enabled: '{{ system_probe_config is defined and ''enabled'' in
      (system_probe_config | default({}, true)) and system_probe_config[''enabled'']
      and datadog_sysprobe_installed }}'
- name: Set system probe enabled (since 6/7.24.1)
  when: not datadog_skip_running_check and (not datadog_before_7241)
  ansible.builtin.set_fact:
    datadog_sysprobe_enabled: '{{ ((system_probe_config is defined and ''enabled''
      in (system_probe_config | default({}, true)) and system_probe_config[''enabled''])
      or (network_config is defined and ''enabled'' in (network_config | default({},
      true)) and network_config[''enabled''])) and datadog_sysprobe_installed }}'
- name: Set system probe enabled (since 6/7.40.0)
  when: not datadog_skip_running_check and (not datadog_before_7400)
  ansible.builtin.set_fact:
    datadog_sysprobe_enabled: '{{ ((system_probe_config is defined and ''enabled''
      in (system_probe_config | default({}, true)) and system_probe_config[''enabled''])
      or (network_config is defined and ''enabled'' in (network_config | default({},
      true)) and network_config[''enabled'']) or (service_monitoring_config is defined
      and ''enabled'' in (service_monitoring_config | default({}, true)) and service_monitoring_config[''enabled'']))
      and datadog_sysprobe_installed }}'
- name: Ensure datadog-agent is running
  when: not datadog_skip_running_check and datadog_enabled and not ansible_check_mode
  ansible.builtin.service:
    name: datadog-agent
    state: started
    enabled: true
- name: Ensure datadog-agent-sysprobe is running if enabled and installed
  when: not datadog_skip_running_check and datadog_enabled and not ansible_check_mode
    and datadog_sysprobe_enabled
  ansible.builtin.service:
    name: datadog-agent-sysprobe
    state: started
    enabled: true
- name: Ensure datadog-agent, datadog-agent-process and datadog-agent-trace are not
    running
  when: not datadog_skip_running_check and not datadog_enabled
  with_list:
  - datadog-agent
  - datadog-agent-process
  - datadog-agent-trace
  ansible.builtin.service:
    name: '{{ item }}'
    state: stopped
    enabled: false
- name: Ensure datadog-agent-sysprobe is stopped if disabled or not installed (before
    6/7.18.0)
  when: not datadog_skip_running_check and (not datadog_enabled or not datadog_sysprobe_enabled)
    and datadog_before_7180 and datadog_sysprobe_installed
  ansible.builtin.service:
    name: datadog-agent-sysprobe
    state: stopped
    enabled: false
- name: Ensure datadog-agent-security is not running
  when: not datadog_skip_running_check and not datadog_enabled
  failed_when: false
  ansible.builtin.service:
    name: datadog-agent-security
    state: stopped
    enabled: false
- name: Create security-agent configuration file
  when: datadog_manage_config and (runtime_security_config is defined and runtime_security_config
    | default({}, true) | length > 0)
  notify: '{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart
    datadog-agent{% endif %}'
  ansible.builtin.template:
    src: security-agent.yaml.j2
    dest: /etc/datadog-agent/security-agent.yaml
    mode: 416
    owner: root
    group: '{{ datadog_group }}'
- name: Remove security-agent configuration file if security-agent is no longer configured
  when: datadog_manage_config and (runtime_security_config is not defined or runtime_security_config
    | default({}, true) | length == 0)
  notify: '{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart
    datadog-agent{% endif %}'
  ansible.builtin.file:
    path: /etc/datadog-agent/security-agent.yaml
    state: absent
