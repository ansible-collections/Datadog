- name: Fail early if Python 3 is used on CentOS / RHEL < 8 with old Ansible
  when: (not datadog_ignore_old_centos_python3_error) and ("{}.{}".format(ansible_version.major,
    ansible_version.minor) is version("2.11", operator="lt", strict=True)) and (ansible_pkg_mgr
    == "yum") and (ansible_facts.python.version.major | int >= 3)
  ansible.builtin.fail:
    msg: The installation of the Agent on RedHat family systems using yum is not compatible
      with Python 3 with older Ansible versions. To run this role, use a Python 2
      interpreter on hosts running CentOS / RHEL < 8 or upgrade Ansible to version
      2.11+
- name: Find out whether to set repo_gpgcheck or not
  ansible.builtin.set_fact:
    do_yum_repo_gpgcheck: "{{ datadog_yum_repo_gpgcheck if datadog_yum_repo_gpgcheck\
      \ != '' else (\n  'no' if (\n    ansible_facts.distribution_version.startswith('8.1.')\
      \ or ansible_facts.distribution_version == '8.1' or\n    datadog_yum_repo !=\
      \ ''\n  ) else 'yes'\n) }}"
- name: Import current RPM key
  when: not ansible_check_mode
  ansible.builtin.rpm_key:
    key: '{{ datadog_yum_gpgkey_current }}'
    state: present
- name: Import new RPM key (Expires in 2022)
  when: not ansible_check_mode
  ansible.builtin.rpm_key:
    key: '{{ datadog_yum_gpgkey_e09422b3 }}'
    state: present
- name: Import new RPM key (Expires in 2024)
  when: not ansible_check_mode
  ansible.builtin.rpm_key:
    key: '{{ datadog_yum_gpgkey_20200908 }}'
    state: present
- name: Set versioned includepkgs variable
  when: datadog_agent_redhat_version is defined
  ansible.builtin.set_fact:
    datadog_includepkgs: '{{ datadog_agent_flavor }}-{{ datadog_agent_redhat_version
      | regex_replace(''^\d+:'', '''') }}'
- name: Set plain includepkgs variable
  when: datadog_agent_redhat_version is not defined
  ansible.builtin.set_fact:
    datadog_includepkgs: '{{ datadog_agent_flavor }}'
- name: Install Datadog Agent 5 yum repo
  register: repofile5
  when: (datadog_agent_major_version|int == 5) and (datadog_yum_repo | length == 0)
    and (not ansible_check_mode)
  ansible.builtin.yum_repository:
    name: datadog
    description: Datadog, Inc.
    baseurl: '{{ datadog_agent5_yum_repo }}'
    enabled: true
    includepkgs: '{{ datadog_includepkgs }}'
    repo_gpgcheck: false
    gpgcheck: '{{ datadog_yum_gpgcheck }}'
    gpgkey:
    - '{{ datadog_yum_gpgkey_current }}'
    - '{{ datadog_yum_gpgkey_20200908 }}'
    - '{{ datadog_yum_gpgkey_e09422b3 }}'
- name: Install Datadog Agent 6 yum repo
  register: repofile6
  when: (datadog_agent_major_version|int == 6) and (datadog_yum_repo | length == 0)
    and (not ansible_check_mode)
  ansible.builtin.yum_repository:
    name: datadog
    description: Datadog, Inc.
    baseurl: '{{ datadog_agent6_yum_repo }}'
    enabled: true
    includepkgs: '{{ datadog_includepkgs }}'
    repo_gpgcheck: '{{ do_yum_repo_gpgcheck }}'
    gpgcheck: '{{ datadog_yum_gpgcheck }}'
    gpgkey:
    - '{{ datadog_yum_gpgkey_current }}'
    - '{{ datadog_yum_gpgkey_20200908 }}'
    - '{{ datadog_yum_gpgkey_e09422b3 }}'
- name: Install Datadog Agent 7 yum repo
  register: repofile7
  when: (datadog_agent_major_version|int == 7) and (datadog_yum_repo | length == 0)
    and (not ansible_check_mode)
  ansible.builtin.yum_repository:
    name: datadog
    description: Datadog, Inc.
    baseurl: '{{ datadog_agent7_yum_repo }}'
    enabled: true
    includepkgs: '{{ datadog_includepkgs }}'
    repo_gpgcheck: '{{ do_yum_repo_gpgcheck }}'
    gpgcheck: '{{ datadog_yum_gpgcheck }}'
    gpgkey:
    - '{{ datadog_yum_gpgkey_current }}'
    - '{{ datadog_yum_gpgkey_20200908 }}'
    - '{{ datadog_yum_gpgkey_e09422b3 }}'
- name: Install Datadog Custom yum repo
  register: repofilecustom
  when: (datadog_yum_repo | length > 0) and (not ansible_check_mode)
  ansible.builtin.yum_repository:
    name: datadog
    description: Datadog, Inc.
    baseurl: '{{ datadog_yum_repo }}'
    enabled: true
    includepkgs: '{{ datadog_includepkgs }}'
    repo_gpgcheck: '{{ do_yum_repo_gpgcheck }}'
    gpgcheck: '{{ datadog_yum_gpgcheck }}'
    gpgkey:
    - '{{ datadog_yum_gpgkey_current }}'
    - '{{ datadog_yum_gpgkey_20200908 }}'
    - '{{ datadog_yum_gpgkey_e09422b3 }}'
- name: Clean repo metadata if repo changed
  failed_when: false
  args:
    warn: false
  when: repofile5.changed or repofile6.changed or repofile7.changed or repofilecustom.changed
  ansible.builtin.command: yum clean metadata --disablerepo="*" --enablerepo=datadog
- name: Refresh Datadog repository cache
  failed_when: false
  args:
    warn: false
  when: repofile5.changed or repofile6.changed or repofile7.changed or repofilecustom.changed
  ansible.builtin.command: yum -y makecache --disablerepo="*" --enablerepo=datadog
- name: Remove old yum repo files
  with_items:
  - 5
  - 6
  - 7
  - custom
  ansible.builtin.yum_repository:
    name: ansible_datadog_{{ item }}
    state: absent
- when: datadog_agent_redhat_version is defined
  ansible.builtin.include_tasks: pkg-redhat/install-pinned.yml
- when: datadog_agent_redhat_version is not defined
  ansible.builtin.include_tasks: pkg-redhat/install-latest.yml
