- name: Load user data
  changed_when: false
  register: macos_user_output
  check_mode: false
  ansible.builtin.shell:
    cmd: 'dscacheutil -q user -a name {{ datadog_macos_user }} | awk ''BEGIN { RS="\n";
      ORS=" " } /uid:/ { print "{ \"uid\": " $2"," } /gid:/ { print "\"gid\": " $2
      " }"}'''
    executable: /bin/bash
- name: Extract JSON user data as variable object
  ansible.builtin.set_fact:
    macos_user_data: '{{ macos_user_output.stdout }}'
- name: Load user group data
  register: macos_user_group
  changed_when: false
  ansible.builtin.shell:
    cmd: 'dscacheutil -q group -a gid {{ macos_user_data.gid }} | grep ''^name: ''
      | awk ''{ print $2 }'''
- name: Find out if user LaunchAgent is running
  register: user_service_created
  changed_when: false
  failed_when: false
  ansible.builtin.shell:
    cmd: launchctl print gui/$(id -u)/{{ datadog_macos_service_name }}
- name: Unload and stop user LaunchAgent
  when: user_service_created.rc == 0
  ansible.builtin.shell:
    cmd: launchctl bootout gui/$(id -u)/{{ datadog_macos_service_name }}
- name: Remove user login item
  when: user_service_created.rc == 0
  ansible.builtin.command: osascript -e 'tell application "System Events" to if login
    item "Datadog Agent" exists then delete login item "Datadog Agent"'
- name: Remove user LaunchAgent plist file
  ansible.builtin.file:
    path: /Users/{{ ansible_user }}/{{ datadog_macos_user_plist_file_path }}
    state: absent
- name: Add system LaunchDaemon plist file
  become: true
  notify: restart datadog-agent-macos
  vars:
    username: '{{ datadog_macos_user }}'
    groupname: '{{ macos_user_group.stdout }}'
  ansible.builtin.template:
    src: com.datadoghq.agent.plist.j2
    dest: '{{ datadog_macos_system_plist_file_path }}'
    owner: 0
    group: 0
    mode: 420
- name: Include configuration setup tasks
  vars:
    _dd_config_dir: '{{ datadog_macos_etc_dir }}'
    _dd_user: '{{ macos_user_data.uid }}'
    _dd_group: '{{ macos_user_data.gid }}'
    _dd_notify_agent: restart datadog-agent-macos
  become: true
  ansible.builtin.import_tasks: _agent-linux-macos-shared.yml
- name: Set permissions for DataDog Directories
  with_items:
  - '{{ datadog_macos_etc_dir }}'
  - '{{ datadog_macos_logs_dir }}'
  - '{{ datadog_macos_run_dir }}'
  notify: restart datadog-agent-macos
  become: true
  ansible.builtin.file:
    path: '{{ item }}'
    owner: '{{ macos_user_data.uid }}'
    group: '{{ macos_user_data.gid }}'
    recurse: true
