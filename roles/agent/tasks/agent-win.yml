- name: Create main Datadog agent configuration file
  when: datadog_manage_config
  notify: restart datadog-agent-win
  ansible.windows.win_template:
    src: datadog.yaml.j2
    dest: '{{ datadog_windows_config_root }}\datadog.yaml'
- name: Register all checks directories present in datadog
  register: datadog_conf_directories
  when: datadog_manage_config and (datadog_disable_untracked_checks or datadog_disable_default_checks)
  ansible.windows.win_find:
    paths: '{{ ansible_facts.env[''ProgramData''] }}\Datadog\conf.d'
    patterns:
    - '*.d'
    file_type: directory
- name: Delete checks not present in datadog_tracked_checks
  loop: '{{ datadog_conf_directories.files | map(attribute=''path'') | list | map(''win_basename'')
    | list | map(''regex_replace'', ''^(.*).d$'', ''\1'') | list }}'
  when: datadog_manage_config and datadog_disable_untracked_checks and item not in
    datadog_tracked_checks
  notify: restart datadog-agent-win
  ansible.windows.win_file:
    path: '{{ ansible_facts.env[''ProgramData''] }}\Datadog\conf.d\{{ item }}.d\conf.yaml'
    state: absent
- name: Delete default checks
  loop: '{{ datadog_conf_directories.files | map(attribute=''path'') | list | map(''win_basename'')
    | list | map(''regex_replace'', ''^(.*).d$'', ''\1'') | list }}'
  when: datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks
  notify: restart datadog-agent-win
  ansible.windows.win_file:
    path: '{{ ansible_facts.env[''ProgramData''] }}\Datadog\conf.d\{{ item }}.d\conf.yaml.default'
    state: absent
- name: Delete example checks
  loop: '{{ datadog_conf_directories.files | map(attribute=''path'') | list | map(''win_basename'')
    | list | map(''regex_replace'', ''^(.*).d$'', ''\1'') | list }}'
  when: datadog_manage_config and datadog_disable_example_checks and item not in datadog_tracked_checks
  notify: restart datadog-agent-win
  ansible.windows.win_file:
    path: '{{ ansible_facts.env[''ProgramData''] }}\Datadog\conf.d\{{ item }}.d\conf.yaml.example'
    state: absent
- name: Ensure configuration directories are present for each Datadog check
  with_items: '{{ datadog_checks|list }}'
  when: datadog_manage_config
  ansible.windows.win_file:
    path: '{{ datadog_windows_config_root }}\conf.d\{{ item }}.d'
    state: directory
- name: Create a configuration file for each Datadog check
  with_items: '{{ datadog_checks|list }}'
  when: datadog_manage_config
  notify: restart datadog-agent-win
  ansible.windows.win_template:
    src: checks.yaml.j2
    dest: '{{ datadog_windows_config_root }}\conf.d\{{ item }}.d\conf.yaml'
- name: Remove old configuration file for each Datadog check
  with_items: '{{ datadog_checks|list }}'
  when: datadog_manage_config
  notify: restart datadog-agent-win
  ansible.windows.win_file:
    path: '{{ datadog_windows_config_root }}\conf.d\{{ item }}.yaml'
    state: absent
- name: Create custom check file for each custom check
  with_items: '{{ datadog_custom_checks|list }}'
  notify: restart datadog-agent-win
  ansible.windows.win_copy:
    src: '{{ datadog_custom_checks[item] }}'
    dest: '{{ datadog_windows_config_root }}\checks.d\{{ item }}.py'
- name: Ensure datadog-trace-agent and datadog-process-agent are not disabled
  when: not datadog_skip_running_check and datadog_enabled and not ansible_check_mode
  with_list:
  - datadog-trace-agent
  - datadog-process-agent
  ansible.windows.win_service:
    name: '{{ item }}'
    start_mode: manual
- name: Create system-probe configuration file
  when: datadog_manage_config
  notify: restart datadog-agent-win
  ansible.windows.win_template:
    src: system-probe.yaml.j2
    dest: '{{ datadog_windows_config_root }}\system-probe.yaml'
- name: Ensure datadog-agent is running
  when: not datadog_skip_running_check and datadog_enabled and not ansible_check_mode
  ansible.windows.win_service:
    name: datadogagent
    state: started
    start_mode: delayed
- name: Ensure datadog-agent is disabled
  when: not datadog_skip_running_check and not datadog_enabled
  with_list:
  - datadog-trace-agent
  - datadog-process-agent
  - datadogagent
  ansible.windows.win_service:
    name: '{{ item }}'
    state: stopped
    start_mode: disabled
- name: Create installation information file
  ansible.builtin.template:
    src: install_info.j2
    dest: '{{ datadog_windows_config_root }}\install_info'
    mode: 420
