name: Check if the collection is up to date with the ansible role

on:
  push: # TEMPORARY DEBUG
  #  schedule:
  #  - cron: '0 4 * * *'

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      check-output: ${{ steps.check-diff.outputs.sync-needed }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@master
        with:
          repository: DataDog/ansible-datadog
          path: ansible-role
      - name: Check diff between roles/agent and ansible-role main branch
        id: check-diff
        run: |
          set 
          diff -x "\.*" -x CHANGELOG.md -x CONTRIBUTING.md -x LICENSE -x ci_test -x manual_tests -x "requirements*" -pur roles/agent/ ansible-role/ || echo "sync-needed=true" >> $GITHUB_OUTPUT
          echo "DEBUG: $GITHUB_OUTPUT"

  execute:
    runs-on: ubuntu-latest
    needs: check
    if: "${{ needs.check.outputs.check-output == 'true' }}"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@master
        with:
          repository: DataDog/ansible-datadog
          path: roles/agent
      - name: Apply Patches if there is any
        run: |
          if [ $(ls patches | wc -l) -gt 1 ]; then
            for patch in $(ls patches);
            do
              if [ "$patch" != ".gtikeep" ]; then
                git apply --verbose $patch
              fi
            done
          fi
      - name: Cleanup checked out repository
        run: |
          find roles/agent/ -not -path '*defaults*' -not -path '*tasks*' -not -path '*templates*' -not -path '*handlers*' -not -name '.gitkeep' -not -path '*meta*' -not -name 'README.md' -type f -exec rm -r {} \;
          touch roles/agent/.gitkeep
      - name: Edit install info file
        run: |
          collection_version=$(cat galaxy.yml | grep "version:" | awk -F: '{print $2}' | xargs)
          sed -i "s/datadog_role/datadog_collection_${collection_version}_agent_role/g" roles/agent/templates/install_info.j2
      - name: Format ansible-datadog role
        run: |
          pip install -r requirements.txt
          ansible-galaxy collection install ansible.windows community.general
          inv role.format-fqcn
      - name: Run ansible-lint
        run: |
          pip install -r requirements.txt
          ansible-lint -v
      - name: Create PR
        run: |
          PR_URL=$(gh pr create --title 'Pull latest ansible-datadog version inside of the collection' --fill)
          gh pr merge $PR_URL --auto
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

