name: ansible-tests
on:
  push:

jobs:
  ansible-test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        os: [debian, rocky8]
        ansible_version: ["2_10", "4_10"]
        agent_version: ["6","7"]
    container:
      image: datadog/docker-library:ansible_${{ matrix.os }}_${{ matrix.ansible_version }}
    steps:
      - uses: actions/checkout@v1
      - name: Print python version
        run: python3 --version
      - name: Build the Ansible collection
        run: ansible-galaxy collection build
      - name: Install the Ansible collection
        run: ansible-galaxy collection install datadog-dd-*.tar.gz
      - name: Run ansible playbook with the collection
        run: ansible-playbook -i ./test/inventory/inventory.ini "./test/install_agent_${{ matrix.agent_version }}.yaml" -e 'ansible_python_interpreter=/usr/bin/python3'
      - name: Check datadog-agent version exit 0
        run: datadog-agent version
  
  ansible-tests-centos:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        os: [centos]
        ansible_version: ["2_10", "4_10"]
        agent_version: ["6","7"]
    container:
      image: datadog/docker-library:ansible_${{ matrix.os }}_${{ matrix.ansible_version }}
    steps:
      - uses: actions/checkout@v1
      - name: Build the Ansible collection
        run: ansible-galaxy collection build
      - name: Install the Ansible collection
        run: ansible-galaxy collection install datadog-dd-*.tar.gz
      - name: Run ansible playbook with the collection
        run: ansible-playbook -i ./test/inventory/inventory.ini "./test/install_agent_${{ matrix.agent_version }}.yaml" -e 'ansible_python_interpreter=/usr/bin/python2'
      - name: Check datadog-agent version exit 0
        run: datadog-agent version

  ansible-tests-suse:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        os: [suse]
        ansible_version: ["2_10", "4_10"]
        agent_version: ["6","7"]
    container:
      image: datadog/docker-library:ansible_${{ matrix.os }}_${{ matrix.ansible_version }}
    steps:
      - uses: actions/checkout@v1
      - name: Build the Ansible collection
        run: ansible-galaxy collection build
      - name: Install the Ansible collection
        run: ansible-galaxy collection install datadog-dd-*.tar.gz
      - name: Run ansible playbook with the collection
        run: ansible-playbook -i ./test/inventory/inventory.ini "./test/install_agent_${{ matrix.agent_version }}.yaml" -e 'ansible_python_interpreter=/usr/bin/python3'
      - name: Check datadog-agent version exit 0
        run: datadog-agent version

  ansible-tests-al2:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        os: [amazonlinux2]
        ansible_version: ["2_10", "4_10"]
        agent_version: ["6","7"]
    container:
      image: datadog/docker-library:ansible_${{ matrix.os }}_${{ matrix.ansible_version }}
    steps:
      - uses: actions/checkout@v1
      - name: Print python version
        run: python3 --version
      - name: Build the Ansible collection
        run: ansible-galaxy collection build
      - name: Install the Ansible collection
        run: ansible-galaxy collection install datadog-dd-*.tar.gz
      - name: Run ansible playbook with the collection
        run: ansible-playbook -i ./test/inventory/inventory.ini "./test/install_agent_${{ matrix.agent_version }}.yaml" -e 'ansible_python_interpreter=/usr/bin/python2' -e 'ansible_password=toto'
      - name: Check datadog-agent version exit 0
        run: datadog-agent version

  ansible-tests-windows:
    runs-on: windows-2022
    steps:
      - name: Run AnsibleRemotingConfig
        run: |
          iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/AlbanAndrieu/ansible-windows/master/files/ConfigureRemotingForAnsible.ps1'))
          winrm set winrm/config/service/auth '@{Basic="true"}'
          winrm set winrm/config/service '@{AllowUnencrypted="true"}'
      - name: Create Windows user
        run: |
          $password = ConvertTo-SecureString "Toto12345789!" -AsPlainText -Force
          New-LocalUser "ansibletest" -Password $password -FullName "ansibletest" -Description "Used to test local ansible"
      - name: Add user admin
        run : Add-LocalGroupMember -Group "Administrators" -Member "ansibletest"
      - uses: actions/checkout@v1
      - uses: Vampire/setup-wsl@v2
        with:
          distribution: Ubuntu-22.04
      - name: Install pip
        shell: wsl-bash {0}
        run: sudo apt update -y && sudo apt install -y python3-pip
      - name: Install Ansible
        shell: wsl-bash {0}
        run: python3 -m pip install ansible==3.0.* pywinrm
      - name: Build the Ansible collection
        shell: wsl-bash {0}
        run: ansible-galaxy collection build && ansible-galaxy collection install ansible.windows
      - name: Install the Ansible collection
        shell: wsl-bash {0}
        run: ansible-galaxy collection install datadog-dd-*.tar.gz
      - name: Run ansible playbook
        shell: wsl-bash {0}
        run: ansible-playbook -i ./test/inventory/inventory_win.ini "./test/install_agent_7.yaml" -e 'ansible_password=Toto12345789!' -vvv

      

